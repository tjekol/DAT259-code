# Generated from EDBS.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,56,433,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
        1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,
        1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,
        1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,
        1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,
        1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,
        1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,
        1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
        1,49,1,50,1,50,1,51,1,51,3,51,367,8,51,1,52,1,52,1,53,1,53,5,53,
        373,8,53,10,53,12,53,376,9,53,1,53,1,53,1,54,1,54,5,54,382,8,54,
        10,54,12,54,385,9,54,1,54,5,54,388,8,54,10,54,12,54,391,9,54,1,55,
        3,55,394,8,55,1,55,4,55,397,8,55,11,55,12,55,398,1,55,1,55,4,55,
        403,8,55,11,55,12,55,404,3,55,407,8,55,1,56,1,56,1,56,1,56,1,56,
        1,56,5,56,415,8,56,10,56,12,56,418,9,56,1,56,1,56,1,57,3,57,423,
        8,57,1,57,1,57,1,58,4,58,428,8,58,11,58,12,58,429,1,58,1,58,0,0,
        59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,95,48,97,49,99,50,101,0,103,0,105,0,107,51,109,52,111,53,
        113,54,115,55,117,56,1,0,6,1,0,39,39,6,0,65,90,97,122,197,198,216,
        216,229,230,248,248,1,0,48,57,1,0,187,187,2,0,10,10,13,13,3,0,9,
        10,13,13,32,32,440,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
        0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
        0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
        0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
        0,0,99,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,
        0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,3,121,1,0,0,0,5,
        123,1,0,0,0,7,125,1,0,0,0,9,127,1,0,0,0,11,129,1,0,0,0,13,135,1,
        0,0,0,15,140,1,0,0,0,17,148,1,0,0,0,19,154,1,0,0,0,21,163,1,0,0,
        0,23,181,1,0,0,0,25,185,1,0,0,0,27,189,1,0,0,0,29,192,1,0,0,0,31,
        196,1,0,0,0,33,210,1,0,0,0,35,215,1,0,0,0,37,219,1,0,0,0,39,221,
        1,0,0,0,41,225,1,0,0,0,43,233,1,0,0,0,45,239,1,0,0,0,47,246,1,0,
        0,0,49,249,1,0,0,0,51,251,1,0,0,0,53,253,1,0,0,0,55,255,1,0,0,0,
        57,257,1,0,0,0,59,259,1,0,0,0,61,261,1,0,0,0,63,264,1,0,0,0,65,266,
        1,0,0,0,67,269,1,0,0,0,69,271,1,0,0,0,71,273,1,0,0,0,73,276,1,0,
        0,0,75,279,1,0,0,0,77,282,1,0,0,0,79,285,1,0,0,0,81,291,1,0,0,0,
        83,294,1,0,0,0,85,300,1,0,0,0,87,306,1,0,0,0,89,311,1,0,0,0,91,317,
        1,0,0,0,93,330,1,0,0,0,95,334,1,0,0,0,97,340,1,0,0,0,99,353,1,0,
        0,0,101,362,1,0,0,0,103,366,1,0,0,0,105,368,1,0,0,0,107,370,1,0,
        0,0,109,379,1,0,0,0,111,393,1,0,0,0,113,408,1,0,0,0,115,422,1,0,
        0,0,117,427,1,0,0,0,119,120,5,46,0,0,120,2,1,0,0,0,121,122,5,58,
        0,0,122,4,1,0,0,0,123,124,5,44,0,0,124,6,1,0,0,0,125,126,5,39,0,
        0,126,8,1,0,0,0,127,128,7,0,0,0,128,10,1,0,0,0,129,130,5,83,0,0,
        130,131,5,75,0,0,131,132,5,82,0,0,132,133,5,73,0,0,133,134,5,86,
        0,0,134,12,1,0,0,0,135,136,5,82,0,0,136,137,5,69,0,0,137,138,5,75,
        0,0,138,139,5,78,0,0,139,14,1,0,0,0,140,141,5,71,0,0,141,142,5,74,
        0,0,142,143,5,69,0,0,143,144,5,78,0,0,144,145,5,84,0,0,145,146,5,
        65,0,0,146,147,5,82,0,0,147,16,1,0,0,0,148,149,5,77,0,0,149,150,
        5,69,0,0,150,151,5,68,0,0,151,152,5,65,0,0,152,153,5,78,0,0,153,
        18,1,0,0,0,154,155,5,79,0,0,155,156,5,80,0,0,156,157,5,80,0,0,157,
        158,5,68,0,0,158,159,5,65,0,0,159,160,5,84,0,0,160,161,5,69,0,0,
        161,162,5,82,0,0,162,20,1,0,0,0,163,164,5,68,0,0,164,165,5,69,0,
        0,165,166,5,70,0,0,166,167,5,73,0,0,167,168,5,78,0,0,168,169,5,69,
        0,0,169,170,5,82,0,0,170,171,5,32,0,0,171,172,5,69,0,0,172,173,5,
        73,0,0,173,174,5,84,0,0,174,175,5,32,0,0,175,176,5,77,0,0,176,177,
        5,79,0,0,177,178,5,68,0,0,178,179,5,85,0,0,179,180,5,76,0,0,180,
        22,1,0,0,0,181,182,5,77,0,0,182,183,5,69,0,0,183,184,5,68,0,0,184,
        24,1,0,0,0,185,186,5,73,0,0,186,187,5,78,0,0,187,188,5,78,0,0,188,
        26,1,0,0,0,189,190,5,85,0,0,190,191,5,84,0,0,191,28,1,0,0,0,192,
        193,5,83,0,0,193,194,5,79,0,0,194,195,5,77,0,0,195,30,1,0,0,0,196,
        197,5,65,0,0,197,198,5,86,0,0,198,199,5,83,0,0,199,200,5,76,0,0,
        200,201,5,85,0,0,201,202,5,84,0,0,202,203,5,32,0,0,203,204,5,77,
        0,0,204,205,5,79,0,0,205,206,5,68,0,0,206,207,5,85,0,0,207,208,5,
        76,0,0,208,209,5,46,0,0,209,32,1,0,0,0,210,211,5,75,0,0,211,212,
        5,65,0,0,212,213,5,76,0,0,213,214,5,76,0,0,214,34,1,0,0,0,215,216,
        5,70,0,0,216,217,5,73,0,0,217,218,5,76,0,0,218,36,1,0,0,0,219,220,
        5,105,0,0,220,38,1,0,0,0,221,222,5,76,0,0,222,223,5,69,0,0,223,224,
        5,83,0,0,224,40,1,0,0,0,225,226,5,70,0,0,226,227,5,69,0,0,227,228,
        5,82,0,0,228,229,5,68,0,0,229,230,5,73,0,0,230,231,5,71,0,0,231,
        232,5,46,0,0,232,42,1,0,0,0,233,234,5,78,0,0,234,235,5,69,0,0,235,
        236,5,83,0,0,236,237,5,84,0,0,237,238,5,69,0,0,238,44,1,0,0,0,239,
        240,5,76,0,0,240,241,5,69,0,0,241,242,5,78,0,0,242,243,5,71,0,0,
        243,244,5,68,0,0,244,245,5,69,0,0,245,46,1,0,0,0,246,247,5,65,0,
        0,247,248,5,86,0,0,248,48,1,0,0,0,249,250,5,8211,0,0,250,50,1,0,
        0,0,251,252,5,43,0,0,252,52,1,0,0,0,253,254,5,47,0,0,254,54,1,0,
        0,0,255,256,5,42,0,0,256,56,1,0,0,0,257,258,5,61,0,0,258,58,1,0,
        0,0,259,260,5,60,0,0,260,60,1,0,0,0,261,262,5,60,0,0,262,263,5,61,
        0,0,263,62,1,0,0,0,264,265,5,62,0,0,265,64,1,0,0,0,266,267,5,62,
        0,0,267,268,5,61,0,0,268,66,1,0,0,0,269,270,5,40,0,0,270,68,1,0,
        0,0,271,272,5,41,0,0,272,70,1,0,0,0,273,274,5,43,0,0,274,275,5,43,
        0,0,275,72,1,0,0,0,276,277,5,42,0,0,277,278,5,42,0,0,278,74,1,0,
        0,0,279,280,5,47,0,0,280,281,5,47,0,0,281,76,1,0,0,0,282,283,5,45,
        0,0,283,284,5,45,0,0,284,78,1,0,0,0,285,286,5,73,0,0,286,287,5,75,
        0,0,287,288,5,75,0,0,288,289,5,74,0,0,289,290,5,69,0,0,290,80,1,
        0,0,0,291,292,5,79,0,0,292,293,5,71,0,0,293,82,1,0,0,0,294,295,5,
        69,0,0,295,296,5,76,0,0,296,297,5,76,0,0,297,298,5,69,0,0,298,299,
        5,82,0,0,299,84,1,0,0,0,300,301,5,110,0,0,301,302,5,101,0,0,302,
        303,5,115,0,0,303,304,5,116,0,0,304,305,5,101,0,0,305,86,1,0,0,0,
        306,307,5,102,0,0,307,308,5,105,0,0,308,309,5,110,0,0,309,310,5,
        110,0,0,310,88,1,0,0,0,311,312,5,102,0,0,312,313,5,248,0,0,313,314,
        5,114,0,0,314,315,5,114,0,0,315,316,5,101,0,0,316,90,1,0,0,0,317,
        318,5,116,0,0,318,319,5,105,0,0,319,320,5,108,0,0,320,321,5,98,0,
        0,321,322,5,97,0,0,322,323,5,107,0,0,323,324,5,101,0,0,324,325,5,
        115,0,0,325,326,5,116,0,0,326,327,5,105,0,0,327,328,5,108,0,0,328,
        329,5,108,0,0,329,92,1,0,0,0,330,331,5,116,0,0,331,332,5,105,0,0,
        332,333,5,108,0,0,333,94,1,0,0,0,334,335,5,60,0,0,335,336,5,116,
        0,0,336,337,5,111,0,0,337,338,5,109,0,0,338,339,5,62,0,0,339,96,
        1,0,0,0,340,341,5,60,0,0,341,342,5,108,0,0,342,343,5,105,0,0,343,
        344,5,110,0,0,344,345,5,106,0,0,345,346,5,101,0,0,346,347,5,115,
        0,0,347,348,5,107,0,0,348,349,5,105,0,0,349,350,5,102,0,0,350,351,
        5,116,0,0,351,352,5,62,0,0,352,98,1,0,0,0,353,354,5,60,0,0,354,355,
        5,116,0,0,355,356,5,111,0,0,356,357,5,109,0,0,357,358,5,114,0,0,
        358,359,5,111,0,0,359,360,5,109,0,0,360,361,5,62,0,0,361,100,1,0,
        0,0,362,363,7,1,0,0,363,102,1,0,0,0,364,367,3,101,50,0,365,367,5,
        45,0,0,366,364,1,0,0,0,366,365,1,0,0,0,367,104,1,0,0,0,368,369,7,
        2,0,0,369,106,1,0,0,0,370,374,5,171,0,0,371,373,8,3,0,0,372,371,
        1,0,0,0,373,376,1,0,0,0,374,372,1,0,0,0,374,375,1,0,0,0,375,377,
        1,0,0,0,376,374,1,0,0,0,377,378,5,187,0,0,378,108,1,0,0,0,379,383,
        3,101,50,0,380,382,3,103,51,0,381,380,1,0,0,0,382,385,1,0,0,0,383,
        381,1,0,0,0,383,384,1,0,0,0,384,389,1,0,0,0,385,383,1,0,0,0,386,
        388,3,9,4,0,387,386,1,0,0,0,388,391,1,0,0,0,389,387,1,0,0,0,389,
        390,1,0,0,0,390,110,1,0,0,0,391,389,1,0,0,0,392,394,5,45,0,0,393,
        392,1,0,0,0,393,394,1,0,0,0,394,396,1,0,0,0,395,397,3,105,52,0,396,
        395,1,0,0,0,397,398,1,0,0,0,398,396,1,0,0,0,398,399,1,0,0,0,399,
        406,1,0,0,0,400,402,5,44,0,0,401,403,3,105,52,0,402,401,1,0,0,0,
        403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,407,1,0,0,0,
        406,400,1,0,0,0,406,407,1,0,0,0,407,112,1,0,0,0,408,409,5,79,0,0,
        409,410,5,66,0,0,410,411,5,83,0,0,411,412,5,33,0,0,412,416,1,0,0,
        0,413,415,8,4,0,0,414,413,1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,
        0,416,417,1,0,0,0,417,419,1,0,0,0,418,416,1,0,0,0,419,420,3,115,
        57,0,420,114,1,0,0,0,421,423,5,13,0,0,422,421,1,0,0,0,422,423,1,
        0,0,0,423,424,1,0,0,0,424,425,5,10,0,0,425,116,1,0,0,0,426,428,7,
        5,0,0,427,426,1,0,0,0,428,429,1,0,0,0,429,427,1,0,0,0,429,430,1,
        0,0,0,430,431,1,0,0,0,431,432,6,58,0,0,432,118,1,0,0,0,12,0,366,
        374,383,389,393,398,404,406,416,422,429,1,6,0,0
    ]

class EDBSLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PERIOD = 1
    COLON = 2
    COMMA = 3
    PRIMED = 4
    APOSTROPHE = 5
    WRITE_KEYWORD = 6
    CALC_KEYWORD = 7
    REPEAT_KEYWORD = 8
    CONDITION_KEYWORD = 9
    UPDATE_KEYWORD = 10
    DEF_MOULE_KEYWORD = 11
    MODULE_PARAM_KEYWORD = 12
    INPUT_PARAM_KEYWORD = 13
    OUTPUT_PARAM_KEYWORD = 14
    MODULE_BODY_KEYWORD = 15
    EXIT_MODULE_KEYWORD = 16
    CALL_MODULE_KEYWORD = 17
    FILE_KEYWORD = 18
    IN_KEYWORD = 19
    READ_KEYWORD = 20
    FINISH_KEYWORD = 21
    NEXT_KEYWORD = 22
    LENGTH_KEYWORD = 23
    OF_KEYWORD = 24
    OP_SUB = 25
    OP_ADD = 26
    OP_DIV = 27
    OP_MUL = 28
    COMP_EQL = 29
    COMP_LT = 30
    COMP_LEQ = 31
    COMP_GT = 32
    COMP_GEQ = 33
    OPEN_PAREN = 34
    CLOSE_PAREN = 35
    SOP_CONCAT = 36
    SOP_REPEAT = 37
    SOP_SPLIT = 38
    SOP_SUBSTR = 39
    BOP_NOT = 40
    BOP_AND = 41
    BOP_OR = 42
    LOP_NEXT = 43
    LOP_FIND = 44
    LOP_BACK = 45
    LOP_RESET = 46
    LOP_RESET_IDX = 47
    NULL_CHAR = 48
    NEWLINE_CHAR = 49
    WHITESPACE_CHAR = 50
    STRING = 51
    IDENTIFIER = 52
    NUMBER = 53
    COMMENT = 54
    NEWLINE = 55
    WHITESPACE = 56

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "':'", "','", "'''", "'SKRIV'", "'REKN'", "'GJENTAR'", 
            "'MEDAN'", "'OPPDATER'", "'DEFINER EIT MODUL'", "'MED'", "'INN'", 
            "'UT'", "'SOM'", "'AVSLUT MODUL.'", "'KALL'", "'FIL'", "'i'", 
            "'LES'", "'FERDIG.'", "'NESTE'", "'LENGDE'", "'AV'", "'\\u2013'", 
            "'+'", "'/'", "'*'", "'='", "'<'", "'<='", "'>'", "'>='", "'('", 
            "')'", "'++'", "'**'", "'//'", "'--'", "'IKKJE'", "'OG'", "'ELLER'", 
            "'neste'", "'finn'", "'f\\u00F8rre'", "'tilbakestill'", "'til'", 
            "'<tom>'", "'<linjeskift>'", "'<tomrom>'" ]

    symbolicNames = [ "<INVALID>",
            "PERIOD", "COLON", "COMMA", "PRIMED", "APOSTROPHE", "WRITE_KEYWORD", 
            "CALC_KEYWORD", "REPEAT_KEYWORD", "CONDITION_KEYWORD", "UPDATE_KEYWORD", 
            "DEF_MOULE_KEYWORD", "MODULE_PARAM_KEYWORD", "INPUT_PARAM_KEYWORD", 
            "OUTPUT_PARAM_KEYWORD", "MODULE_BODY_KEYWORD", "EXIT_MODULE_KEYWORD", 
            "CALL_MODULE_KEYWORD", "FILE_KEYWORD", "IN_KEYWORD", "READ_KEYWORD", 
            "FINISH_KEYWORD", "NEXT_KEYWORD", "LENGTH_KEYWORD", "OF_KEYWORD", 
            "OP_SUB", "OP_ADD", "OP_DIV", "OP_MUL", "COMP_EQL", "COMP_LT", 
            "COMP_LEQ", "COMP_GT", "COMP_GEQ", "OPEN_PAREN", "CLOSE_PAREN", 
            "SOP_CONCAT", "SOP_REPEAT", "SOP_SPLIT", "SOP_SUBSTR", "BOP_NOT", 
            "BOP_AND", "BOP_OR", "LOP_NEXT", "LOP_FIND", "LOP_BACK", "LOP_RESET", 
            "LOP_RESET_IDX", "NULL_CHAR", "NEWLINE_CHAR", "WHITESPACE_CHAR", 
            "STRING", "IDENTIFIER", "NUMBER", "COMMENT", "NEWLINE", "WHITESPACE" ]

    ruleNames = [ "PERIOD", "COLON", "COMMA", "PRIMED", "APOSTROPHE", "WRITE_KEYWORD", 
                  "CALC_KEYWORD", "REPEAT_KEYWORD", "CONDITION_KEYWORD", 
                  "UPDATE_KEYWORD", "DEF_MOULE_KEYWORD", "MODULE_PARAM_KEYWORD", 
                  "INPUT_PARAM_KEYWORD", "OUTPUT_PARAM_KEYWORD", "MODULE_BODY_KEYWORD", 
                  "EXIT_MODULE_KEYWORD", "CALL_MODULE_KEYWORD", "FILE_KEYWORD", 
                  "IN_KEYWORD", "READ_KEYWORD", "FINISH_KEYWORD", "NEXT_KEYWORD", 
                  "LENGTH_KEYWORD", "OF_KEYWORD", "OP_SUB", "OP_ADD", "OP_DIV", 
                  "OP_MUL", "COMP_EQL", "COMP_LT", "COMP_LEQ", "COMP_GT", 
                  "COMP_GEQ", "OPEN_PAREN", "CLOSE_PAREN", "SOP_CONCAT", 
                  "SOP_REPEAT", "SOP_SPLIT", "SOP_SUBSTR", "BOP_NOT", "BOP_AND", 
                  "BOP_OR", "LOP_NEXT", "LOP_FIND", "LOP_BACK", "LOP_RESET", 
                  "LOP_RESET_IDX", "NULL_CHAR", "NEWLINE_CHAR", "WHITESPACE_CHAR", 
                  "CHAR", "CHAR_PLUS", "DIGIT", "STRING", "IDENTIFIER", 
                  "NUMBER", "COMMENT", "NEWLINE", "WHITESPACE" ]

    grammarFileName = "EDBS.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


